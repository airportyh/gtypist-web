{
  "name": "barber",
  "version": "0.0.6",
  "description": "Write CSS in Javascript",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "css",
    "style"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:airportyh/barber.git"
  },
  "author": {
    "name": "Toby Ho"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~1.1.1",
    "ispy": "~0.1.2"
  },
  "readme": "Barber - Write CSS in JS\n========================\n\nBarber lets you write CSS in Javasript. Now you might ask: *why would you want to do that?*\n\n1. You swim in Javascript anyway, why not?\n2. Javacript is more programmatic/dynamic. Variables, for example.\n3. Barber automatically handles vendor prefixing of CSS properties for you.\n4. Harness the power of Javascript modules! You can now package up CSS as part of your module to be shared between projects and with the rest of the world.\n\n## Install\n\nInstall `barber` via NPM or Bower.\n\n## Usage\n\nSimple example\n\n    var Barber = require('barber')\n    var styles = Barber.styleSheet()\n\n    styles.add('button', {\n      'border-radius': '10px', // vendor prefixes are applied for you\n      boxShadow: '3px 2px 3px #888', // can also camelCase\n      'background': '#ddd'\n    })\n\n    Barber.install() // apply the styles to the page\n\nAlternatively, you can pass in one single string of CSS to `add()`\n\n    styles.add('button { border-radius: 10px; box-shadow: 3px 2px 3px #888; }')\n\n## Namespaces\n\nIn the above example, calling `Barber.styleSheet()` returns the default stylesheet, but you can also namespace your stylesheets\n\n    var styles = Barber.styleSheet('components')\n\n`Barber.install()` still installs all available stylesheets, but you can choose to instead install each stylesheet separately\n\n    Barber.styleSheet().install()\n    Barber.styleSheet('components').install()\n\nThis gives you more control over what stylesheets you want applied.\n\n## Using Barber with Modules\n\nBarber was design with authoring modules in mind. How that would work is, in your Javascript module, you would have code that creates a stylesheet\n\n    // awesome_module.js\n    var styles = require('barber').styleSheet('awesome_module')\n\n    styles.add(...)\n    styles.add(...)\n    ...\n\n*Note that no stylesheet has been installed within the module code*.\n\nNext, someone else installs your awesome module, and includes it in their app somewhere\n\n    var awesome = require('awesome_module')\n\nThen, in a separate part of their code - where they bootstrap the application - they would install the stylesheets.\n\n    Barber.install()\n\nThey can also choose to skip the stylesheet from your module by explicitly installing each stylesheet they want included.\n\n    Barber.styleSheet().install()\n    Barber.styleSheet('some_other_module').install()\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/airportyh/barber/issues"
  },
  "_id": "barber@0.0.6",
  "_from": "barber@"
}
